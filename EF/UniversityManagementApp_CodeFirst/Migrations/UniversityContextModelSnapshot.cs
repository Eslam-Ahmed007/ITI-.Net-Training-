// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityManagementApp_CodeFirst.Models;

#nullable disable

namespace UniversityManagementApp_CodeFirst.Migrations
{
    [DbContext(typeof(UniversityContext))]
    partial class UniversityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniversityManagementApp_CodeFirst.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EnrollmentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("StudentId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Students_Email");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Email = "ahmed.hassan@university.edu",
                            EnrollmentDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ahmed",
                            LastName = "Hassan",
                            Phone = "0123456789"
                        },
                        new
                        {
                            StudentId = 2,
                            Email = "fatima.ali@university.edu",
                            EnrollmentDate = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Fatima",
                            LastName = "Ali",
                            Phone = "0123456788"
                        },
                        new
                        {
                            StudentId = 3,
                            Email = "omar.mohamed@university.edu",
                            EnrollmentDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Omar",
                            LastName = "Mohamed",
                            Phone = "0123456787"
                        },
                        new
                        {
                            StudentId = 4,
                            Email = "yasmin.ibrahim@university.edu",
                            EnrollmentDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Yasmin",
                            LastName = "Ibrahim",
                            Phone = "0123456786"
                        },
                        new
                        {
                            StudentId = 5,
                            Email = "khalid.mahmoud@university.edu",
                            EnrollmentDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Khalid",
                            LastName = "Mahmoud",
                            Phone = "0123456785"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
